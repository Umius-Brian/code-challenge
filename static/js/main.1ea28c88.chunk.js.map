{"version":3,"sources":["Card.js","Articles.js","Search.js","App.js","index.js"],"names":["Card","title","author","section","url","image","alt","className","href","target","rel","src","Articles","articles","length","map","item","i","byline","toUpperCase","multimedia","caption","Search","useState","data","setData","searchTerm","setSearchTerm","initialRender","useRef","useEffect","a","axios","process","catch","e","console","log","result","results","filteredResults","filter","matchSearchTerm","x","toLowerCase","includes","current","fetchData","type","id","placeholder","value","onChange","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAceA,EAXF,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAClD,OACE,sBAAKC,UAAU,OAAf,UACE,mBAAGC,KAAMJ,EAAKK,OAAO,SAASC,IAAI,aAAlC,SAAgDT,IAChD,qBAAKU,IAAKN,EAAOC,IAAKA,IACtB,6BAAKJ,IACL,6BAAKC,QCmBIS,EAxBE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,qBAAKN,UAAU,WAAf,SACIM,EAASC,OAGTD,EAASE,KAAI,SAACC,EAAMC,GAAP,OACX,8BACE,cAAC,EAAD,CAEEhB,MAAOe,EAAKf,MACZC,OAAQc,EAAKE,OACbf,QAASa,EAAKb,QAAQgB,cACtBf,IAAKY,EAAKZ,IACVC,MAAOW,EAAKI,WAAW,GAAGhB,IAC1BE,IAAKU,EAAKI,WAAW,GAAGC,SANnBJ,QALX,sD,iBC+COK,EAnDA,WAAO,IAAD,EACKC,mBAAS,IADd,mBACZC,EADY,KACNC,EADM,OAEiBF,mBAAS,IAF1B,mBAEZG,EAFY,KAEAC,EAFA,KAQbC,EAAgBC,kBAAO,GA6B7B,OAzBAC,qBAAU,WAAM,4CACd,gCAAAC,EAAA,sEACuBC,IAAM,kEAAD,OAC0CC,qCAEnEC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,MAJ1B,OACQG,EADR,OAMQC,EAAUD,EAAOd,KAAKe,QAEtBC,EAAkBD,EAAQE,QAAO,SAAAzB,GACrC,IAAM0B,EAAkB,SAAAC,GAAC,OAAIA,EAAEC,cAAcC,SAASnB,EAAWkB,gBACjE,OAAQF,EAAgB1B,EAAKb,UAAYuC,EAAgB1B,EAAKE,SAAWwB,EAAgB1B,EAAKf,UAI5F2B,EAAckB,QAChBlB,EAAckB,SAAU,GAExBrB,EAAQ,IACRA,EAAQe,IAlBZ,4CADc,uBAAC,WAAD,wBAsBdO,KACC,CAACrB,IAGF,sBAAKnB,UAAU,iBAAf,UACE,uBACEyC,KAAK,OACLC,GAAG,QACHC,YAAY,0BACZC,MAAOzB,EACP0B,SAvCe,SAAAjB,GAAC,OAAIR,EAAcQ,EAAE1B,OAAO0C,UAyC7C,cAAC,EAAD,CAAUtC,SAAUW,QCvCX6B,MATf,WACE,OACE,sBAAK9C,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,QCDN+C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1ea28c88.chunk.js","sourcesContent":["import React from 'react';\n\n// render Card component with props\nconst Card = ({ title, author, section, url, image, alt }) => {\n  return (\n    <div className='card'>\n      <a href={url} target='_blank' rel=\"noreferrer\">{title}</a>\n      <img src={image} alt={alt} />\n      <h2>{author}</h2> \n      <h3>{section}</h3>\n    </div>\n  )\n};\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n// set condition if results are returned\nconst Articles = ({ articles }) => {\n  return (\n    <div className='articles'>\n      {!articles.length ? (\n        <h1>No articles found</h1>\n      ) : (\n        articles.map((item, i) => (\n          <div>\n            <Card \n              key={i}\n              title={item.title}\n              author={item.byline}\n              section={item.section.toUpperCase()}  \n              url={item.url}\n              image={item.multimedia[4].url}\n              alt={item.multimedia[4].caption}\n            />\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default Articles;","import React, { useState, useEffect, useRef } from 'react';\nimport Articles from './Articles';\nimport axios from 'axios';\n\nconst Search = () => {\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // match search term against title, byline, and section\n  const handleChange = e => setSearchTerm(e.target.value);\n\n  // stops initial render\n  const initialRender = useRef(true);\n\n  // fetch data from api upon initial render\n  // not entirely secure to store env variables in client, however, it's fine for the sake of this app\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios(\n        `https://api.nytimes.com/svc/topstories/v2/science.json?api-key=${process.env.REACT_APP_API_KEY}`\n      )\n      .catch(e => console.log(e));\n\n      const results = result.data.results;\n\n      const filteredResults = results.filter(item => {\n        const matchSearchTerm = x => x.toLowerCase().includes(searchTerm.toLowerCase());\n        return (matchSearchTerm(item.section) || matchSearchTerm(item.byline) || matchSearchTerm(item.title))\n      });\n      \n      // only render upon keypress\n      if (initialRender.current) {\n        initialRender.current = false;\n      } else {\n        setData([]);\n        setData(filteredResults);\n      };\n    };\n    fetchData();\n  }, [searchTerm]);\n\n  return (\n    <div className='search-results'>\n      <input \n        type='text'\n        id='input'\n        placeholder='Search Science Articles'\n        value={searchTerm}\n        onChange={handleChange}\n      />\n      <Articles articles={data}/>\n    </div>\n  )\n}\n\nexport default Search;","import Search from './Search'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>NY Times API</header>\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}